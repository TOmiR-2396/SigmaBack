spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:prod}
  mail:
    host: ${MAIL_HOST:smtp.envialosimple.email}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
        transport:
          protocol: smtp

jwt:
  secret: "YjFhMmMzZDRlNWY2ZzdoOGk5ajBrMWwybTNuNG81cDZxN3I4czl0MHUxdjJ3M3g0eTV6NmE3YjhjOWQwZTFmMmczaDRpNWo2azdsOG05bjBvMXAy"

# Dirección remitente por defecto (opcional). También puede venir de env: MAIL_FROM
mail:
  from: ${MAIL_FROM:}

# URL base del frontend para reset de contraseña (debe terminar en ?token=)
app:
  frontend:
    reset-url: ${APP_FRONTEND_RESET_URL:http://localhost:5173/reset-password?token=}

---
spring:
  config:
    activate:
      on-profile: dev
  
  # H2 Database para desarrollo
  datasource:
    url: jdbc:h2:mem:gymdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    driver-class-name: org.h2.Driver
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    open-in-view: false
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect

  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false

---
spring:
  config:
    activate:
      on-profile: prod
  
  # MySQL para producción
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3307}/${DB_NAME:gymdb}?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: ${DB_USER:gymuser}
    password: ${DB_PASSWORD:gympass}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect

  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false

  # Configuración de Spring Security mínima para test
#  security:
#    user:
#      name: admin
#      password: admin
#      roles: OWNER

# cambie el puerto a 8081 para evitar conflictos con otros servicios como docker que corren en 8080 y si lo mato al puerto se me cae todo
server:
  port: ${PORT:8081}

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace
